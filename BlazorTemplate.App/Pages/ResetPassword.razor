@page "/password/reset/{Code}"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation

@inject NavigationManager _navigationManager
@inject BlazorTemplate.App.Services.API API
@inject IModalService _modalService
@inject IToastService _toastService
@inject SpinnerService _spinnerService

<fieldset disabled="@(AllowAllOperations == false)">
    <div class="row mt-3">
        <div class="col-md-4 offset-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Reset Password</h5>
                </div>
                <div class="card-body">
                    <div class="row mt-3">
                        <div class="col-lg-12">
                            <p>Re-enter your account email and the new passowrd.</p>
                            <input type="text" class="form-control" @bind="Email" />
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-lg-12">
                            <input type="password" class="form-control" @bind="NewPassword" placeholder="New Password"/>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-lg-12">
                            <input type="password" class="form-control" @bind="ConfirmPassword" placeholder="Confirm Password" />
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-lg-12">
                            <input type="button" class="btn btn-primary float-end " value="Submit" @onclick="ResestPassword" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</fieldset>

@code {

    [Parameter]
    public string Code { get; set; }
    public string Email { get; set; }
    public string NewPassword { get; set; }
    public string ConfirmPassword { get; set; }
    public bool Disabled { get; set; } = false;
    public bool AllowAllOperations { get; set; } = false;

    protected override async Task OnParametersSetAsync()
    {
        var response = await API.GetAsync<bool>("api/v1/account/operations", false);
        AllowAllOperations = response;  

        if(string.IsNullOrEmpty(Code))
            _toastService.ShowError("Invalid Recovery Code.");
    }

    async public Task ResestPassword()
    {
        Common.IdentityResetPassword content = new Common.IdentityResetPassword() { Email = Email, ResetCode = Code, NewPassword = NewPassword };
        var response = await API.PostAsync("resetpassword", content, true, true);
        if(response)
        {
            _toastService.ShowSuccess("Done. Password is reset. Please log in with your new password.");
            _navigationManager.NavigateTo("login");
        }
    }
}