@* @page "/login" *@

@using BlazorTemplate.Identity
@using BlazorTemplate.Dto
@inject IAccountManagement Acct
@inject BlazorTemplate.App.Services.API API
@inject IToastService _toastService
@inject NavigationManager _navigationManager
@inject IJSRuntime JSRuntime


<AuthorizeView>
    <Authorized>
        <div class="alert alert-success">You are logged in as @context.User.Identity?.Name.</div>
    </Authorized>
    <NotAuthorized>
        <div class="row mt-5">
            <div class="col-md-4 offset-md-4">
                <div class="card">
                    <div class="card-header">
                        <h2>Login</h2>
                    </div>
                    <div class="card-body">
                        @if (errors)
                        {
                            @foreach (var error in errorList)
                            {
                                <div class="alert alert-danger">@error</div>
                            }
                        }
                        <div class="row">
                            <div class="col-md-12">
                                <label for="email">
                                    Email:
                                </label>
                                <input required id="email" name="emailInput" placeholder="Enter your email address" type="email" @bind-value="email" class="form-control" />
                            </div>
                        </div>
                        <div class="row mt-1">
                            <div class="col-md-12">
                                <label for="password">
                                    Password:
                                </label>
                                <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="password" class="form-control" />
                            </div>
                        </div>
                        @if(TwoFactorPrompt)
                        {
                        <div class="row mt-1">
                            <div class="col-md-6">
                                <label for="password">
                                    Security Code:
                                </label>
                                <input id="twoFactor" placeholder="6-digit code" type="text" @bind-value="TwoFactorCode" class="form-control" />
                            </div>
                        </div>
                        
                        <div class="row mt-2">
                            <div class="col-md-12">
                                <label for="password">
                                    Remember this device for 14 days
                                </label>
                                <input type="checkbox" @bind="TwoFactorRememberMe" />
                            </div>
                        </div>
                        }
                        @if(TwoFactorRecoveryPrompt)
                        {
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <label for="password">
                                    Enter one of the security codes provided to you when you setup Two Factor Authentication:
                                </label>
                                <input id="twoFactorRecovery" placeholder="Enter your 2FA Recovery Code" type="text" @bind-value="TwoFactorRecoveryCode" class="form-control" />
                            </div>
                        </div>
                        }
                        <div class="row mt-4">
                            <div class="col-md-12">
                                <button @onclick="DoLoginAsync" class="btn btn-primary">Login</button>
                            </div>
                        </div>
                        
                        @if(AllowAllOperations)
                        {
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <a href="password/forgot">Forgot Password</a>
                            </div>
                        </div>
                        
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <a href="confirmEmailResend">Resend Email Confirmation</a>
                            </div>
                        </div>
                        }
                        @if(TwoFactorPrompt)
                        {
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div class="btn btn-link btn-override" @onclick="ShowTwoFactorRecovery">Security Code Recovery</div>
                            </div>
                        </div>
                        }
                        @if(RegistrationEnabled)
                        {
                            <div class="row mt-3">
                                <div class="col-md-12">
                                    <a href="register"><strong>Need an Account? Register Here.</strong></a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                
            </div>
        </div>
        
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool success, errors;
    private string email = string.Empty;
    private string password = string.Empty;
    private List<string> errorList { get; set; } = new List<string>();
    private bool AllowAllOperations { get; set; } = false;
    private string TwoFactorCode { get; set; }
    private string TwoFactorRecoveryCode { get; set; }
    private bool TwoFactorRememberMe { get; set; } = false;
    private bool TwoFactorPrompt { get; set; } = false;
    private bool TwoFactorRecoveryPrompt { get; set; } = false;
    private bool RegistrationEnabled { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        RegistrationEnabled = await API.GetAsync<bool>("api/v1/account/operations/registration");
    }

    protected override async Task OnParametersSetAsync()
    {
        //Check if the server will allow 'All Operations', if NOT then do not show the password recovery or resend email confirmation.
        var response = await API.GetAsync<bool>("api/v1/account/operations", false);
        AllowAllOperations = response;  
    }

    public async Task DoLoginAsync()
    {
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorList = ["Email is required."];
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = ["Password is required."];
            return;
        }

        var result = await Acct.LoginAsync(email!, password!, TwoFactorCode, TwoFactorRecoveryCode);

        if(result.Prompt2FA && !TwoFactorRecoveryPrompt)
        {
            TwoFactorCode = null;
            TwoFactorRecoveryCode = null;
            TwoFactorPrompt = true;
            _toastService.ShowInfo("Enter your security code.");
        }
        else if(result.Prompt2FA && TwoFactorRecoveryPrompt)
        {
            TwoFactorCode = null;
            TwoFactorRecoveryCode = null;
            TwoFactorRecoveryPrompt = true;
            _toastService.ShowInfo("Enter your security recovery code.");
        }
        else if (result.Succeeded)
        {
            success = true;
            email = password = string.Empty;

            if(TwoFactorRememberMe == false && TwoFactorPrompt)
            {
                var temp = new  
                {
                    ForgetMachine = true
                };
                var response = await API.PostAsync<IdentityManage2faResponse>("/manage/2fa", temp, true, true, true);
            }

            _navigationManager.NavigateTo("/");
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }

    private string confirmPassword = string.Empty;

    public async Task DoRegisterAsync()
    {
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(email))
        {
            errors = true;
            errorList = ["Email is required."];
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = ["Password is required."];
            return;
        }

        if (string.IsNullOrWhiteSpace(confirmPassword))
        {
            errors = true;
            errorList = ["Please confirm your password."];
            return;
        }

        if (password != confirmPassword)
        {
            errors = true;
            errorList = ["Passwords don't match."];
            return;
        }

        var result = await Acct.RegisterAsync(email!, password!);

        if (result.Succeeded)
        {
            success = true;
            email = password = confirmPassword = string.Empty;
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }

    private void ShowTwoFactorRecovery()
    {
        TwoFactorRecoveryPrompt = true;
        TwoFactorPrompt = false;
    }

    
}



